{
    "metadata": {
        "extracted_at": "2025-08-07T14:08:44.682725",
        "total_failures": 37,
        "extractor_version": "1.0.0"
    },
    "failures": [
        {
            "name": "Automatic Status Updates - Simple Tests should log deadline-based status updates with proper format",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/automatic_status_updates_simple_test.dart",
            "suite": "automatic_status_updates_simple",
            "group": "Automatic Status Updates - Simple Tests",
            "error": "Expected: contains 'current_day: pending â†’ overdue (deadline_passed)'\n  Actual: <null>\n   Which: is not a string, map or iterable\n",
            "testId": 193,
            "line": 72,
            "column": 5,
            "stackTrace": "package:matcher                                               expect\npackage:flutter_test/src/widget_tester.dart 474:18            expect\ntest/services/automatic_status_updates_simple_test.dart 88:9  main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 5074,
            "category": "assertion"
        },
        {
            "name": "App loads chat screen",
            "file": "package:flutter_test/src/widget_tester.dart",
            "suite": "widget_tester.dart",
            "group": "",
            "error": "Test failed. See exception logs above.\nThe test description was: App loads chat screen",
            "testId": 164,
            "line": 175,
            "column": 5,
            "stackTrace": "",
            "isFailure": false,
            "timestamp": 5235,
            "category": "unknown"
        },
        {
            "name": "MessageProcessor Semantic Content Integration Bot Message Processing should process message with contentKey",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/chat_service/message_processor_semantic_test.dart",
            "suite": "message_processor_semantic",
            "group": "MessageProcessor Semantic Content Integration > MessageProcessor Semantic Content Integration Bot Message Processing",
            "error": "Expected: not 'Original fallback text'\n  Actual: 'Original fallback text'\n",
            "testId": 217,
            "line": 20,
            "column": 7,
            "stackTrace": "package:matcher                                                       expect\npackage:flutter_test/src/widget_tester.dart 474:18                    expect\ntest/services/chat_service/message_processor_semantic_test.dart 39:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 5968,
            "category": "assertion"
        },
        {
            "name": "MessageProcessor Semantic Content Integration Choice Message Processing should process choice message with contentKey",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/chat_service/message_processor_semantic_test.dart",
            "suite": "message_processor_semantic",
            "group": "MessageProcessor Semantic Content Integration > MessageProcessor Semantic Content Integration Choice Message Processing",
            "error": "Expected: not 'Completed'\n  Actual: 'Completed'\n",
            "testId": 222,
            "line": 113,
            "column": 7,
            "stackTrace": "package:matcher                                                        expect\npackage:flutter_test/src/widget_tester.dart 474:18                     expect\ntest/services/chat_service/message_processor_semantic_test.dart 146:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 5981,
            "category": "assertion"
        },
        {
            "name": "MessageProcessor Semantic Content Integration Choice Message Processing should handle mixed choices (some with contentKey, some without)",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/chat_service/message_processor_semantic_test.dart",
            "suite": "message_processor_semantic",
            "group": "MessageProcessor Semantic Content Integration > MessageProcessor Semantic Content Integration Choice Message Processing",
            "error": "Expected: not 'Completed'\n  Actual: 'Completed'\n",
            "testId": 224,
            "line": 176,
            "column": 7,
            "stackTrace": "package:matcher                                                        expect\npackage:flutter_test/src/widget_tester.dart 474:18                     expect\ntest/services/chat_service/message_processor_semantic_test.dart 200:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 5987,
            "category": "assertion"
        },
        {
            "name": "MessageProcessor Semantic Content Integration Legacy Compatibility should prioritize semantic content over legacy variants when contentKey present",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/chat_service/message_processor_semantic_test.dart",
            "suite": "message_processor_semantic",
            "group": "MessageProcessor Semantic Content Integration > MessageProcessor Semantic Content Integration Legacy Compatibility",
            "error": "Expected: not 'Legacy fallback text'\n  Actual: 'Legacy fallback text'\n",
            "testId": 229,
            "line": 257,
            "column": 7,
            "stackTrace": "package:matcher                                                        expect\npackage:flutter_test/src/widget_tester.dart 474:18                     expect\ntest/services/chat_service/message_processor_semantic_test.dart 275:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 5996,
            "category": "assertion"
        },
        {
            "name": "MessageProcessor Semantic Content Integration Template Processing Integration should apply template processing after semantic content resolution",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/chat_service/message_processor_semantic_test.dart",
            "suite": "message_processor_semantic",
            "group": "MessageProcessor Semantic Content Integration > MessageProcessor Semantic Content Integration Template Processing Integration",
            "error": "Expected: not 'Fallback with {user.name|friend}'\n  Actual: 'Fallback with {user.name|friend}'\n",
            "testId": 231,
            "line": 281,
            "column": 7,
            "stackTrace": "package:matcher                                                        expect\npackage:flutter_test/src/widget_tester.dart 474:18                     expect\ntest/services/chat_service/message_processor_semantic_test.dart 299:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 6002,
            "category": "assertion"
        },
        {
            "name": "ChatService should load chat messages from JSON",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/chat_service_test.dart",
            "suite": "chat_service",
            "group": "ChatService",
            "error": "Expected: 'Hi|||I\\'m Tristopher|||But my friends call me Trist.'\n  Actual: 'Here is how it\\'s going to work|||You pick one thing you want to achieve daily|||ONE THING|||And I\\'ll be here to make sure you do it'\n   Which: is different.\n          Expected: Hi|||I'm Tr ...\n            Actual: Here is how ...\n                     ^\n           Differ at offset 1\n",
            "testId": 350,
            "line": 17,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/chat_service_test.dart 25:7           main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 7546,
            "category": "assertion"
        },
        {
            "name": "ChatService should return messages in correct order",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/chat_service_test.dart",
            "suite": "chat_service",
            "group": "ChatService",
            "error": "Expected: <10>\n  Actual: <11>\n",
            "testId": 351,
            "line": 28,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/chat_service_test.dart 33:7           main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 7558,
            "category": "assertion"
        },
        {
            "name": "ChatService should not duplicate messages when switching sequences",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/chat_service_test.dart",
            "suite": "chat_service",
            "group": "ChatService",
            "error": "Expected: <2>\n  Actual: <3>\nFound duplicate messages: [, Ok, so what are you going to do every day?, ]\n",
            "testId": 353,
            "line": 49,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/chat_service_test.dart 67:7           main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 7592,
            "category": "assertion"
        },
        {
            "name": "ChatService should load choice messages correctly",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/chat_service_test.dart",
            "suite": "chat_service",
            "group": "ChatService",
            "error": "Expected: 'Hi Trist !'\n  Actual: 'How will you make sure?'\n   Which: is different.\n          Expected: Hi Trist !\n            Actual: How will yo ...\n                     ^\n           Differ at offset 1\n",
            "testId": 354,
            "line": 76,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/chat_service_test.dart 85:7           main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 7598,
            "category": "assertion"
        },
        {
            "name": "ChatService should build message map for quick lookup",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/chat_service_test.dart",
            "suite": "chat_service",
            "group": "ChatService",
            "error": "Expected: <true>\n  Actual: <false>\n",
            "testId": 355,
            "line": 89,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/chat_service_test.dart 94:7           main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 7603,
            "category": "assertion"
        },
        {
            "name": "ChatService should get message by id",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/chat_service_test.dart",
            "suite": "chat_service",
            "group": "ChatService",
            "error": "Expected: not null\n  Actual: <null>\n",
            "testId": 356,
            "line": 99,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/chat_service_test.dart 105:7          main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 7609,
            "category": "assertion"
        },
        {
            "name": "Previous Day Grace Period Tests should archive task on new day",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/previous_day_grace_period_test.dart",
            "suite": "previous_day_grace_period",
            "group": "Previous Day Grace Period Tests",
            "error": "Expected: ('2024-01-02' or null)\n  Actual: '2025-08-06'\n",
            "testId": 373,
            "line": 33,
            "column": 5,
            "stackTrace": "package:matcher                                         expect\npackage:flutter_test/src/widget_tester.dart 474:18      expect\ntest/services/previous_day_grace_period_test.dart 49:7  main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 7782,
            "category": "assertion"
        },
        {
            "name": "DataActionProcessor Template Functions should resolve NEXT_ACTIVE_DATE_1 when today is active",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/data_action_processor_test.dart",
            "suite": "data_action_processor",
            "group": "DataActionProcessor > DataActionProcessor Template Functions",
            "error": "Expected: '2025-08-07'\n  Actual: '2025-08-14'\n   Which: is different.\n          Expected: 2025-08-07\n            Actual: 2025-08-14\n                            ^\n           Differ at offset 8\n",
            "testId": 432,
            "line": 369,
            "column": 7,
            "stackTrace": "package:matcher                                      expect\npackage:flutter_test/src/widget_tester.dart 474:18   expect\ntest/services/data_action_processor_test.dart 384:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 8661,
            "category": "assertion"
        },
        {
            "name": "Active Day Logic Fixes Problem 1: isActiveDay Logic with activeDays should return true when no activeDays configured (backward compatibility)",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/active_day_logic_fixes_test.dart",
            "suite": "active_day_logic_fixes",
            "group": "Active Day Logic Fixes > Active Day Logic Fixes Problem 1: isActiveDay Logic with activeDays",
            "error": "Expected: <true>\n  Actual: <false>\n",
            "testId": 647,
            "line": 66,
            "column": 7,
            "stackTrace": "package:matcher                                      expect\npackage:flutter_test/src/widget_tester.dart 474:18   expect\ntest/services/active_day_logic_fixes_test.dart 78:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 10503,
            "category": "assertion"
        },
        {
            "name": "Active Day Logic Fixes Problem 1: isActiveDay Logic with activeDays should return false when task scheduled for different date",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/active_day_logic_fixes_test.dart",
            "suite": "active_day_logic_fixes",
            "group": "Active Day Logic Fixes > Active Day Logic Fixes Problem 1: isActiveDay Logic with activeDays",
            "error": "Expected: <false>\n  Actual: <true>\n",
            "testId": 648,
            "line": 81,
            "column": 7,
            "stackTrace": "package:matcher                                      expect\npackage:flutter_test/src/widget_tester.dart 474:18   expect\ntest/services/active_day_logic_fixes_test.dart 93:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 10518,
            "category": "assertion"
        },
        {
            "name": "Automatic Status Updates (Phase 1) Current Day Deadline Checks should mark pending task as overdue after deadline",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/automatic_status_updates_test.dart",
            "suite": "automatic_status_updates",
            "group": "Automatic Status Updates (Phase 1) > Automatic Status Updates (Phase 1) Current Day Deadline Checks",
            "error": "Expected: 'overdue'\n  Actual: 'pending'\n   Which: is different.\n          Expected: overdue\n            Actual: pending\n                    ^\n           Differ at offset 0\n",
            "testId": 688,
            "line": 20,
            "column": 7,
            "stackTrace": "package:matcher                                         expect\npackage:flutter_test/src/widget_tester.dart 474:18      expect\ntest/services/automatic_status_updates_test.dart 40:11  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 10980,
            "category": "assertion"
        },
        {
            "name": "Automatic Status Updates (Phase 1) Current Day Deadline Checks should mark as overdue only when active day and past deadline",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/automatic_status_updates_test.dart",
            "suite": "automatic_status_updates",
            "group": "Automatic Status Updates (Phase 1) > Automatic Status Updates (Phase 1) Current Day Deadline Checks",
            "error": "Expected: 'overdue'\n  Actual: 'pending'\n   Which: is different.\n          Expected: overdue\n            Actual: pending\n                    ^\n           Differ at offset 0\n",
            "testId": 692,
            "line": 94,
            "column": 7,
            "stackTrace": "package:matcher                                          expect\npackage:flutter_test/src/widget_tester.dart 474:18       expect\ntest/services/automatic_status_updates_test.dart 112:11  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 11032,
            "category": "assertion"
        },
        {
            "name": "Automatic Status Updates (Phase 1) Status Update Logging should log automatic status updates with timestamp when deadline passes",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/automatic_status_updates_test.dart",
            "suite": "automatic_status_updates",
            "group": "Automatic Status Updates (Phase 1) > Automatic Status Updates (Phase 1) Status Update Logging",
            "error": "Expected: not null\n  Actual: <null>\n",
            "testId": 698,
            "line": 174,
            "column": 7,
            "stackTrace": "package:matcher                                          expect\npackage:flutter_test/src/widget_tester.dart 474:18       expect\ntest/services/automatic_status_updates_test.dart 195:11  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 11060,
            "category": "assertion"
        },
        {
            "name": "Task Boolean Computation Tests isActiveDay Computation should default to true when no active days configured",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/task_boolean_computation_test.dart",
            "suite": "task_boolean_computation",
            "group": "Task Boolean Computation Tests > Task Boolean Computation Tests isActiveDay Computation",
            "error": "Expected: <true>\n  Actual: <false>\n",
            "testId": 709,
            "line": 19,
            "column": 7,
            "stackTrace": "package:matcher                                        expect\npackage:flutter_test/src/widget_tester.dart 474:18     expect\ntest/services/task_boolean_computation_test.dart 25:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 11229,
            "category": "assertion"
        },
        {
            "name": "Task Boolean Computation Tests isActiveDay Computation should handle empty active days list",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/task_boolean_computation_test.dart",
            "suite": "task_boolean_computation",
            "group": "Task Boolean Computation Tests > Task Boolean Computation Tests isActiveDay Computation",
            "error": "Expected: <true>\n  Actual: <false>\n",
            "testId": 715,
            "line": 94,
            "column": 7,
            "stackTrace": "package:matcher                                         expect\npackage:flutter_test/src/widget_tester.dart 474:18      expect\ntest/services/task_boolean_computation_test.dart 102:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 11279,
            "category": "assertion"
        },
        {
            "name": "FormatterService should format timeOfDay values correctly",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/formatter_service_test.dart",
            "suite": "formatter_service",
            "group": "FormatterService",
            "error": "Expected: 'morning'\n  Actual: <null>\n   Which: not an <Instance of 'String'>\n",
            "testId": 756,
            "line": 40,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/formatter_service_test.dart 41:7      main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 11930,
            "category": "assertion"
        },
        {
            "name": "FormatterService should format intensity values correctly",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/formatter_service_test.dart",
            "suite": "formatter_service",
            "group": "FormatterService",
            "error": "Expected: 'off'\n  Actual: <null>\n   Which: not an <Instance of 'String'>\n",
            "testId": 757,
            "line": 47,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/formatter_service_test.dart 48:7      main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 11935,
            "category": "assertion"
        },
        {
            "name": "FormatterService should format activeDays values correctly",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/formatter_service_test.dart",
            "suite": "formatter_service",
            "group": "FormatterService",
            "error": "Expected: 'weekdays'\n  Actual: <null>\n   Which: not an <Instance of 'String'>\n",
            "testId": 758,
            "line": 54,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/formatter_service_test.dart 55:7      main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 11939,
            "category": "assertion"
        },
        {
            "name": "FormatterService should format timePeriod values correctly",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/formatter_service_test.dart",
            "suite": "formatter_service",
            "group": "FormatterService",
            "error": "Expected: 'morning deadline'\n  Actual: <null>\n   Which: not an <Instance of 'String'>\n",
            "testId": 759,
            "line": 60,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/formatter_service_test.dart 61:7      main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 11943,
            "category": "assertion"
        },
        {
            "name": "FormatterService should cache formatters after first load",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/formatter_service_test.dart",
            "suite": "formatter_service",
            "group": "FormatterService",
            "error": "Expected: 'afternoon'\n  Actual: <null>\n   Which: not an <Instance of 'String'>\n",
            "testId": 762,
            "line": 79,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/formatter_service_test.dart 84:7      main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 11959,
            "category": "assertion"
        },
        {
            "name": "FormatterService should convert numeric values to strings for lookup",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/formatter_service_test.dart",
            "suite": "formatter_service",
            "group": "FormatterService",
            "error": "Expected: 'morning'\n  Actual: <null>\n   Which: not an <Instance of 'String'>\n",
            "testId": 763,
            "line": 87,
            "column": 5,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/formatter_service_test.dart 89:7      main.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 11962,
            "category": "assertion"
        },
        {
            "name": "SessionService Task End Date Computation should compute isPastEndDate as true when end date is before today",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/session_service_test.dart",
            "suite": "session_service",
            "group": "SessionService > SessionService Task End Date Computation",
            "error": "Expected: <true>\n  Actual: <false>\n",
            "testId": 832,
            "line": 530,
            "column": 7,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/session_service_test.dart 539:9       main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12645,
            "category": "assertion"
        },
        {
            "name": "SessionService Task End Date Computation should compute correctly for dates far in the past",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/session_service_test.dart",
            "suite": "session_service",
            "group": "SessionService > SessionService Task End Date Computation",
            "error": "Expected: <true>\n  Actual: <false>\n",
            "testId": 839,
            "line": 594,
            "column": 7,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/session_service_test.dart 599:9       main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12666,
            "category": "assertion"
        },
        {
            "name": "SessionService Task End Date Computation should not interfere with existing boolean computations",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/session_service_test.dart",
            "suite": "session_service",
            "group": "SessionService > SessionService Task End Date Computation",
            "error": "Expected: <true>\n  Actual: <false>\n",
            "testId": 841,
            "line": 610,
            "column": 7,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/session_service_test.dart 623:9       main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12674,
            "category": "assertion"
        },
        {
            "name": "Clean Architecture Integration Tests Basic Message Flow should process messages without duplication",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/clean_architecture_integration_test.dart",
            "suite": "clean_architecture_integration",
            "group": "Clean Architecture Integration Tests > Clean Architecture Integration Tests Basic Message Flow",
            "error": "Expected: contains <1>\n  Actual: [2, 160, 160, 161]\n   Which: does not contain <1>\n",
            "testId": 845,
            "line": 18,
            "column": 7,
            "stackTrace": "package:matcher                                                   expect\npackage:flutter_test/src/widget_tester.dart 474:18                expect\ntest/services/flow/clean_architecture_integration_test.dart 30:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12715,
            "category": "assertion"
        },
        {
            "name": "Clean Architecture Integration Tests Message Processing should process templates correctly",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/clean_architecture_integration_test.dart",
            "suite": "clean_architecture_integration",
            "group": "Clean Architecture Integration Tests > Clean Architecture Integration Tests Message Processing",
            "error": "Expected: non-empty\n  Actual: []\n",
            "testId": 869,
            "line": 79,
            "column": 7,
            "stackTrace": "package:matcher                                                   expect\npackage:flutter_test/src/widget_tester.dart 474:18                expect\ntest/services/flow/clean_architecture_integration_test.dart 87:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12726,
            "category": "assertion"
        },
        {
            "name": "Clean Architecture Integration Tests State Management should handle message availability correctly",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/clean_architecture_integration_test.dart",
            "suite": "clean_architecture_integration",
            "group": "Clean Architecture Integration Tests > Clean Architecture Integration Tests State Management",
            "error": "Expected: true\n  Actual: <false>\n",
            "testId": 882,
            "line": 142,
            "column": 7,
            "stackTrace": "package:matcher                                                    expect\npackage:flutter_test/src/widget_tester.dart 474:18                 expect\ntest/services/flow/clean_architecture_integration_test.dart 146:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12746,
            "category": "assertion"
        },
        {
            "name": "Clean Architecture Integration Tests Backward Compatibility should maintain existing API compatibility",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/clean_architecture_integration_test.dart",
            "suite": "clean_architecture_integration",
            "group": "Clean Architecture Integration Tests > Clean Architecture Integration Tests Backward Compatibility",
            "error": "Expected: true\n  Actual: <false>\n",
            "testId": 885,
            "line": 156,
            "column": 7,
            "stackTrace": "package:matcher                                                    expect\npackage:flutter_test/src/widget_tester.dart 474:18                 expect\ntest/services/flow/clean_architecture_integration_test.dart 166:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12752,
            "category": "assertion"
        },
        {
            "name": "MessageWalker Special Messages should collect autoroute messages without stopping",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/message_walker_test.dart",
            "suite": "message_walker",
            "group": "MessageWalker > MessageWalker Special Messages",
            "error": "Expected: an object with length of <3>\n  Actual: [Instance of 'ChatMessage', Instance of 'ChatMessage']\n   Which: has length of <2>\n",
            "testId": 904,
            "line": 158,
            "column": 7,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/flow/message_walker_test.dart 171:9   main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12905,
            "category": "assertion"
        },
        {
            "name": "MessageWalker Complex Scenarios should handle mixed message types correctly",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/message_walker_test.dart",
            "suite": "message_walker",
            "group": "MessageWalker > MessageWalker Complex Scenarios",
            "error": "Expected: an object with length of <4>\n  Actual: [\n            Instance of 'ChatMessage',\n            Instance of 'ChatMessage',\n            Instance of 'ChatMessage'\n          ]\n   Which: has length of <3>\n",
            "testId": 909,
            "line": 218,
            "column": 7,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/flow/message_walker_test.dart 235:9   main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12912,
            "category": "assertion"
        }
    ]
}