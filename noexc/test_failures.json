{
    "metadata": {
        "extracted_at": "2025-08-07T17:34:49.655796",
        "total_failures": 7,
        "extractor_version": "1.0.0"
    },
    "failures": [
        {
            "name": "SessionService Task End Date Computation should not interfere with existing boolean computations",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/session_service_test.dart",
            "suite": "session_service",
            "group": "SessionService > SessionService Task End Date Computation",
            "error": "Expected: <true>\n  Actual: <false>\n",
            "testId": 786,
            "line": 538,
            "column": 7,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/session_service_test.dart 551:9       main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12708,
            "category": "assertion"
        },
        {
            "name": "Clean Architecture Integration Tests Basic Message Flow should process messages without duplication",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/clean_architecture_integration_test.dart",
            "suite": "clean_architecture_integration",
            "group": "Clean Architecture Integration Tests > Clean Architecture Integration Tests Basic Message Flow",
            "error": "Expected: contains <1>\n  Actual: [2, 160, 160, 161]\n   Which: does not contain <1>\n",
            "testId": 820,
            "line": 18,
            "column": 7,
            "stackTrace": "package:matcher                                                   expect\npackage:flutter_test/src/widget_tester.dart 474:18                expect\ntest/services/flow/clean_architecture_integration_test.dart 30:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12866,
            "category": "assertion"
        },
        {
            "name": "Clean Architecture Integration Tests Message Processing should process templates correctly",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/clean_architecture_integration_test.dart",
            "suite": "clean_architecture_integration",
            "group": "Clean Architecture Integration Tests > Clean Architecture Integration Tests Message Processing",
            "error": "Expected: non-empty\n  Actual: []\n",
            "testId": 825,
            "line": 79,
            "column": 7,
            "stackTrace": "package:matcher                                                   expect\npackage:flutter_test/src/widget_tester.dart 474:18                expect\ntest/services/flow/clean_architecture_integration_test.dart 87:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12878,
            "category": "assertion"
        },
        {
            "name": "Clean Architecture Integration Tests State Management should handle message availability correctly",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/clean_architecture_integration_test.dart",
            "suite": "clean_architecture_integration",
            "group": "Clean Architecture Integration Tests > Clean Architecture Integration Tests State Management",
            "error": "Expected: true\n  Actual: <false>\n",
            "testId": 832,
            "line": 142,
            "column": 7,
            "stackTrace": "package:matcher                                                    expect\npackage:flutter_test/src/widget_tester.dart 474:18                 expect\ntest/services/flow/clean_architecture_integration_test.dart 146:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12898,
            "category": "assertion"
        },
        {
            "name": "Clean Architecture Integration Tests Backward Compatibility should maintain existing API compatibility",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/clean_architecture_integration_test.dart",
            "suite": "clean_architecture_integration",
            "group": "Clean Architecture Integration Tests > Clean Architecture Integration Tests Backward Compatibility",
            "error": "Expected: true\n  Actual: <false>\n",
            "testId": 834,
            "line": 156,
            "column": 7,
            "stackTrace": "package:matcher                                                    expect\npackage:flutter_test/src/widget_tester.dart 474:18                 expect\ntest/services/flow/clean_architecture_integration_test.dart 166:9  main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 12904,
            "category": "assertion"
        },
        {
            "name": "MessageWalker Special Messages should collect autoroute messages without stopping",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/message_walker_test.dart",
            "suite": "message_walker",
            "group": "MessageWalker > MessageWalker Special Messages",
            "error": "Expected: an object with length of <3>\n  Actual: [Instance of 'ChatMessage', Instance of 'ChatMessage']\n   Which: has length of <2>\n",
            "testId": 849,
            "line": 158,
            "column": 7,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/flow/message_walker_test.dart 171:9   main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 13110,
            "category": "assertion"
        },
        {
            "name": "MessageWalker Complex Scenarios should handle mixed message types correctly",
            "file": "/Users/jpl/Dev/Apps/noexc/test/services/flow/message_walker_test.dart",
            "suite": "message_walker",
            "group": "MessageWalker > MessageWalker Complex Scenarios",
            "error": "Expected: an object with length of <4>\n  Actual: [\n            Instance of 'ChatMessage',\n            Instance of 'ChatMessage',\n            Instance of 'ChatMessage'\n          ]\n   Which: has length of <3>\n",
            "testId": 854,
            "line": 218,
            "column": 7,
            "stackTrace": "package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/services/flow/message_walker_test.dart 235:9   main.<fn>.<fn>.<fn>\n",
            "isFailure": true,
            "timestamp": 13127,
            "category": "assertion"
        }
    ]
}