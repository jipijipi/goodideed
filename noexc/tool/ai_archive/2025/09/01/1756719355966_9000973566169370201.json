{
  "timestamp": "2025-09-01T11:35:55.964143",
  "target": {
    "sequenceId": "intro_seq",
    "messageId": 163,
    "contentKey": "bot.request.name.casual",
    "targetFile": "assets/content/bot/request/name_casual.txt"
  },
  "config": {
    "provider": {
      "name": "generic-json",
      "base_url": "https://api.example.com/generate",
      "model": "my-model",
      "api_key_env": "LLM_API_KEY",
      "mock": true,
      "timeout_ms": 30000
    },
    "gen": {
      "num_variants": 8,
      "temperature": 0.7,
      "top_p": 0.9,
      "max_bubbles_per_line": 3,
      "max_chars_per_bubble": 90,
      "dedupe_threshold": 0.82
    },
    "context": {
      "history_bubbles": 4,
      "include_sibling_exemplars": true,
      "max_exemplars": 10
    },
    "style": {
      "tone": [
        "friendly",
        "concise",
        "supportive"
      ],
      "forbid_emojis": true,
      "allow_pipes": true,
      "preserve_placeholders": true
    },
    "io": {
      "archive_dir": "tool/ai_archive",
      "dry_run": true,
      "verbose": false,
      "fail_fast": false
    },
    "rate_limit": {
      "rpm": 30,
      "retry_count": 2,
      "retry_backoff_ms": 1000
    },
    "safety": {
      "blocklist": [
        "shit",
        "fuck"
      ],
      "pii_regexes": []
    }
  },
  "context": [
    {
      "id": 1,
      "sender": "bot",
      "type": "bot",
      "text": "contentKey:bot.introduce.character.casual"
    },
    {
      "id": 160,
      "sender": "bot",
      "type": "bot",
      "text": "contentKey:bot.introduce.self.friendly"
    },
    {
      "id": 161,
      "sender": "bot",
      "type": "choice",
      "text": ""
    },
    {
      "id": 162,
      "sender": "bot",
      "type": "bot",
      "text": "Please, call me Tristopher."
    }
  ],
  "exemplars": {
    "siblingSample": [
      "By what time of the day should your task be completed?",
      "When's your deadline each day?",
      "What time should you finish by?",
      "Daily cutoff time?",
      "By when do you need this done?",
      "Did it already?",
      "Task done yet?",
      "How'd it go?",
      "Get it finished?",
      "All wrapped up?"
    ],
    "existingVariants": [
      "So, what should I call you?",
      "What's your name?",
      "How do I address you?",
      "What do you go by?",
      "Name please?"
    ]
  },
  "prompt": {
    "system": "You are a UX writer for NOEXC, a friendly accountability bot. Write multiple alternative lines for the specified contentKey. Keep placeholders like {user.name} exactly unchanged. Use ||| to split long messages into multiple bubbles (max 3). Do not use emojis. Tone: friendly, concise, supportive. Concise, natural, no marketing fluff.",
    "task": {
      "contentKey": "bot.request.name.casual",
      "targetPath": "assets/content/bot/request/name_casual.txt",
      "constraints": {
        "numVariants": 8,
        "maxBubblesPerLine": 3,
        "maxCharsPerBubble": 90,
        "preservePlaceholders": true
      }
    },
    "context": [
      {
        "sender": "bot",
        "type": "bot",
        "text": "contentKey:bot.introduce.character.casual"
      },
      {
        "sender": "bot",
        "type": "bot",
        "text": "contentKey:bot.introduce.self.friendly"
      },
      {
        "sender": "bot",
        "type": "choice",
        "text": ""
      },
      {
        "sender": "bot",
        "type": "bot",
        "text": "Please, call me Tristopher."
      }
    ],
    "exemplars": {
      "existingVariants": [
        "So, what should I call you?",
        "What's your name?",
        "How do I address you?",
        "What do you go by?",
        "Name please?"
      ],
      "siblingExemplars": [
        "By what time of the day should your task be completed?",
        "When's your deadline each day?",
        "What time should you finish by?",
        "Daily cutoff time?",
        "By when do you need this done?",
        "Did it already?",
        "Task done yet?",
        "How'd it go?",
        "Get it finished?",
        "All wrapped up?"
      ]
    },
    "output_format": {
      "type": "json",
      "schema": {
        "variants": [
          "string"
        ]
      }
    }
  },
  "request": {
    "model": "my-model",
    "temperature": 0.7,
    "top_p": 0.9,
    "n": 8,
    "prompt": {
      "system": "You are a UX writer for NOEXC, a friendly accountability bot. Write multiple alternative lines for the specified contentKey. Keep placeholders like {user.name} exactly unchanged. Use ||| to split long messages into multiple bubbles (max 3). Do not use emojis. Tone: friendly, concise, supportive. Concise, natural, no marketing fluff.",
      "task": {
        "contentKey": "bot.request.name.casual",
        "targetPath": "assets/content/bot/request/name_casual.txt",
        "constraints": {
          "numVariants": 8,
          "maxBubblesPerLine": 3,
          "maxCharsPerBubble": 90,
          "preservePlaceholders": true
        }
      },
      "context": [
        {
          "sender": "bot",
          "type": "bot",
          "text": "contentKey:bot.introduce.character.casual"
        },
        {
          "sender": "bot",
          "type": "bot",
          "text": "contentKey:bot.introduce.self.friendly"
        },
        {
          "sender": "bot",
          "type": "choice",
          "text": ""
        },
        {
          "sender": "bot",
          "type": "bot",
          "text": "Please, call me Tristopher."
        }
      ],
      "exemplars": {
        "existingVariants": [
          "So, what should I call you?",
          "What's your name?",
          "How do I address you?",
          "What do you go by?",
          "Name please?"
        ],
        "siblingExemplars": [
          "By what time of the day should your task be completed?",
          "When's your deadline each day?",
          "What time should you finish by?",
          "Daily cutoff time?",
          "By when do you need this done?",
          "Did it already?",
          "Task done yet?",
          "How'd it go?",
          "Get it finished?",
          "All wrapped up?"
        ]
      },
      "output_format": {
        "type": "json",
        "schema": {
          "variants": [
            "string"
          ]
        }
      }
    }
  },
  "response": {
    "mock": true,
    "prompt": {
      "system": "You are a UX writer for NOEXC, a friendly accountability bot. Write multiple alternative lines for the specified contentKey. Keep placeholders like {user.name} exactly unchanged. Use ||| to split long messages into multiple bubbles (max 3). Do not use emojis. Tone: friendly, concise, supportive. Concise, natural, no marketing fluff.",
      "task": {
        "contentKey": "bot.request.name.casual",
        "targetPath": "assets/content/bot/request/name_casual.txt",
        "constraints": {
          "numVariants": 8,
          "maxBubblesPerLine": 3,
          "maxCharsPerBubble": 90,
          "preservePlaceholders": true
        }
      },
      "context": [
        {
          "sender": "bot",
          "type": "bot",
          "text": "contentKey:bot.introduce.character.casual"
        },
        {
          "sender": "bot",
          "type": "bot",
          "text": "contentKey:bot.introduce.self.friendly"
        },
        {
          "sender": "bot",
          "type": "choice",
          "text": ""
        },
        {
          "sender": "bot",
          "type": "bot",
          "text": "Please, call me Tristopher."
        }
      ],
      "exemplars": {
        "existingVariants": [
          "So, what should I call you?",
          "What's your name?",
          "How do I address you?",
          "What do you go by?",
          "Name please?"
        ],
        "siblingExemplars": [
          "By what time of the day should your task be completed?",
          "When's your deadline each day?",
          "What time should you finish by?",
          "Daily cutoff time?",
          "By when do you need this done?",
          "Did it already?",
          "Task done yet?",
          "How'd it go?",
          "Get it finished?",
          "All wrapped up?"
        ]
      },
      "output_format": {
        "type": "json",
        "schema": {
          "variants": [
            "string"
          ]
        }
      }
    },
    "model": "my-model"
  },
  "acceptedVariants": [
    "[bot.request.name.casual] Variant 1 at 1756719355956 ||| Second bubble (optional)"
  ]
}