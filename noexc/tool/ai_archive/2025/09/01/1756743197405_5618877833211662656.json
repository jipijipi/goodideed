{
  "timestamp": "2025-09-01T18:13:17.402639",
  "target": {
    "sequenceId": "overdue_seq",
    "messageId": 90,
    "contentKey": "bot.acknowledge.failure.supportive",
    "targetFile": "assets/content/bot/acknowledge/failure_supportive.txt"
  },
  "config": {
    "provider": {
      "name": "generic-json",
      "base_url": "https://api.example.com/generate",
      "model": "my-model",
      "api_key_env": "LLM_API_KEY",
      "mock": true,
      "timeout_ms": 30000
    },
    "gen": {
      "num_variants": 8,
      "temperature": 0.7,
      "top_p": 0.9,
      "max_bubbles_per_line": 3,
      "max_chars_per_bubble": 90,
      "dedupe_threshold": 0.82
    },
    "context": {
      "history_bubbles": 4,
      "include_sibling_exemplars": false,
      "max_exemplars": 10
    },
    "style": {
      "tone": [
        "friendly",
        "concise",
        "supportive"
      ],
      "forbid_emojis": true,
      "allow_pipes": true,
      "preserve_placeholders": true
    },
    "io": {
      "archive_dir": "tool/ai_archive",
      "dry_run": true,
      "verbose": false,
      "fail_fast": false
    },
    "rate_limit": {
      "rpm": 30,
      "retry_count": 2,
      "retry_backoff_ms": 1000
    },
    "safety": {
      "blocklist": [
        "shit",
        "fuck"
      ],
      "pii_regexes": []
    }
  },
  "context": [
    {
      "id": 15,
      "sender": "bot",
      "type": "bot",
      "text": "contentKey:bot.celebrate.success.enthusiastic"
    },
    {
      "id": 274,
      "sender": "bot",
      "type": "bot",
      "text": "What about today?||| You are game today?"
    },
    {
      "id": 87,
      "sender": "bot",
      "type": "bot",
      "text": "contentKey:bot.request.task_status.gentle"
    },
    {
      "id": 88,
      "sender": "user",
      "type": "choice",
      "text": "contentKey:user.choose.task_status.failed"
    }
  ],
  "exemplars": {
    "siblingSample": [
      "Weekdays only - solid work schedule",
      "Monday through Friday focus",
      "Business days execution plan",
      "Professional week dedication",
      "Standard weekday commitment",
      "Evening deadline set",
      "End-of-day completion target",
      "Wrapping up by evening",
      "Good choice for evening finish",
      "Day's end deadline confirmed"
    ],
    "existingVariants": [
      "That's okay, these things happen.",
      "Don't worry, we can try again.",
      "No problem! Let's figure this out together.",
      "It's alright, everyone has setbacks.",
      "That's fine - we'll work through this."
    ]
  },
  "prompt": {
    "system": "You are a UX writer for NOEXC, a friendly accountability bot. Write multiple alternative lines for the specified contentKey. Keep placeholders like {user.name} exactly unchanged. Use ||| to split long messages into multiple bubbles (max 3). Do not use emojis. Tone: friendly, concise, supportive. Concise, natural, no marketing fluff.",
    "task": {
      "contentKey": "bot.acknowledge.failure.supportive",
      "targetPath": "assets/content/bot/acknowledge/failure_supportive.txt",
      "constraints": {
        "numVariants": 8,
        "maxBubblesPerLine": 3,
        "maxCharsPerBubble": 90,
        "preservePlaceholders": true
      }
    },
    "context": [
      {
        "sender": "bot",
        "type": "bot",
        "ref": "contentKey:bot.celebrate.success.enthusiastic",
        "examples": [
          "Great stuff buddy",
          "Absolutely crushing it!",
          "You're on fire today!"
        ]
      },
      {
        "sender": "bot",
        "type": "bot",
        "ref": "What about today?||| You are game today?"
      },
      {
        "sender": "bot",
        "type": "bot",
        "ref": "contentKey:bot.request.task_status.gentle",
        "examples": [
          "How did your task go on {task.dueDay:activeDays}?",
          "Could you please share your {task.dueDay:activeDays} task status?",
          "When you're ready, let me know how things went on {task.dueDay:activeDays}."
        ]
      },
      {
        "sender": "user",
        "type": "choice",
        "ref": "contentKey:user.choose.task_status.failed",
        "examples": [
          "❌ Didn't complete the task",
          "❌ Task not finished",
          "❌ Unable to complete"
        ]
      }
    ],
    "output_format": {
      "type": "json",
      "schema": {
        "variants": [
          "string"
        ]
      }
    }
  },
  "request": {
    "model": "my-model",
    "temperature": 0.7,
    "top_p": 0.9,
    "n": 8,
    "prompt": {
      "system": "You are a UX writer for NOEXC, a friendly accountability bot. Write multiple alternative lines for the specified contentKey. Keep placeholders like {user.name} exactly unchanged. Use ||| to split long messages into multiple bubbles (max 3). Do not use emojis. Tone: friendly, concise, supportive. Concise, natural, no marketing fluff.",
      "task": {
        "contentKey": "bot.acknowledge.failure.supportive",
        "targetPath": "assets/content/bot/acknowledge/failure_supportive.txt",
        "constraints": {
          "numVariants": 8,
          "maxBubblesPerLine": 3,
          "maxCharsPerBubble": 90,
          "preservePlaceholders": true
        }
      },
      "context": [
        {
          "sender": "bot",
          "type": "bot",
          "ref": "contentKey:bot.celebrate.success.enthusiastic",
          "examples": [
            "Great stuff buddy",
            "Absolutely crushing it!",
            "You're on fire today!"
          ]
        },
        {
          "sender": "bot",
          "type": "bot",
          "ref": "What about today?||| You are game today?"
        },
        {
          "sender": "bot",
          "type": "bot",
          "ref": "contentKey:bot.request.task_status.gentle",
          "examples": [
            "How did your task go on {task.dueDay:activeDays}?",
            "Could you please share your {task.dueDay:activeDays} task status?",
            "When you're ready, let me know how things went on {task.dueDay:activeDays}."
          ]
        },
        {
          "sender": "user",
          "type": "choice",
          "ref": "contentKey:user.choose.task_status.failed",
          "examples": [
            "❌ Didn't complete the task",
            "❌ Task not finished",
            "❌ Unable to complete"
          ]
        }
      ],
      "output_format": {
        "type": "json",
        "schema": {
          "variants": [
            "string"
          ]
        }
      }
    }
  },
  "response": {
    "mock": true,
    "prompt": {
      "system": "You are a UX writer for NOEXC, a friendly accountability bot. Write multiple alternative lines for the specified contentKey. Keep placeholders like {user.name} exactly unchanged. Use ||| to split long messages into multiple bubbles (max 3). Do not use emojis. Tone: friendly, concise, supportive. Concise, natural, no marketing fluff.",
      "task": {
        "contentKey": "bot.acknowledge.failure.supportive",
        "targetPath": "assets/content/bot/acknowledge/failure_supportive.txt",
        "constraints": {
          "numVariants": 8,
          "maxBubblesPerLine": 3,
          "maxCharsPerBubble": 90,
          "preservePlaceholders": true
        }
      },
      "context": [
        {
          "sender": "bot",
          "type": "bot",
          "ref": "contentKey:bot.celebrate.success.enthusiastic",
          "examples": [
            "Great stuff buddy",
            "Absolutely crushing it!",
            "You're on fire today!"
          ]
        },
        {
          "sender": "bot",
          "type": "bot",
          "ref": "What about today?||| You are game today?"
        },
        {
          "sender": "bot",
          "type": "bot",
          "ref": "contentKey:bot.request.task_status.gentle",
          "examples": [
            "How did your task go on {task.dueDay:activeDays}?",
            "Could you please share your {task.dueDay:activeDays} task status?",
            "When you're ready, let me know how things went on {task.dueDay:activeDays}."
          ]
        },
        {
          "sender": "user",
          "type": "choice",
          "ref": "contentKey:user.choose.task_status.failed",
          "examples": [
            "❌ Didn't complete the task",
            "❌ Task not finished",
            "❌ Unable to complete"
          ]
        }
      ],
      "output_format": {
        "type": "json",
        "schema": {
          "variants": [
            "string"
          ]
        }
      }
    },
    "model": "my-model"
  },
  "acceptedVariants": [
    "[bot.acknowledge.failure.supportive] Variant 1 at 1756743197393 ||| Second bubble (optional)"
  ],
  "stateFile": "tool/state/onboarding_to_msg3.yaml",
  "resolvedPath": {
    "nodes": [
      {
        "sequenceId": "welcome_seq",
        "messageId": 1,
        "type": "autoroute"
      },
      {
        "sequenceId": "welcome_seq",
        "messageId": 291,
        "type": "dataAction"
      },
      {
        "sequenceId": "welcome_seq",
        "messageId": 222,
        "type": "autoroute"
      },
      {
        "sequenceId": "taskCheck_seq",
        "messageId": 263,
        "type": "autoroute"
      },
      {
        "sequenceId": "taskCheck_seq",
        "messageId": 286,
        "type": "autoroute"
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 87,
        "type": "bot"
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 88,
        "type": "choice",
        "choiceSelected": {
          "index": 0,
          "text": "As a matter of fact, I did!",
          "contentKey": "user.choose.task_status.completed"
        }
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 89,
        "type": "bot"
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 280,
        "type": "dataAction"
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 279,
        "type": "dataAction"
      },
      {
        "sequenceId": "success_seq",
        "messageId": 15,
        "type": "bot"
      },
      {
        "sequenceId": "success_seq",
        "messageId": 126,
        "type": "dataAction"
      },
      {
        "sequenceId": "success_seq",
        "messageId": 458,
        "type": "dataAction"
      },
      {
        "sequenceId": "catchup_seq",
        "messageId": 273,
        "type": "autoroute"
      },
      {
        "sequenceId": "catchup_seq",
        "messageId": 274,
        "type": "bot"
      },
      {
        "sequenceId": "taskCheck_seq",
        "messageId": 263,
        "type": "autoroute"
      },
      {
        "sequenceId": "taskCheck_seq",
        "messageId": 286,
        "type": "autoroute"
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 87,
        "type": "bot"
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 88,
        "type": "choice",
        "choiceSelected": {
          "index": 0,
          "text": "As a matter of fact, I did!",
          "contentKey": "user.choose.task_status.completed"
        }
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 89,
        "type": "bot"
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 280,
        "type": "dataAction"
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 279,
        "type": "dataAction"
      },
      {
        "sequenceId": "success_seq",
        "messageId": 15,
        "type": "bot"
      },
      {
        "sequenceId": "success_seq",
        "messageId": 126,
        "type": "dataAction"
      },
      {
        "sequenceId": "success_seq",
        "messageId": 458,
        "type": "dataAction"
      },
      {
        "sequenceId": "catchup_seq",
        "messageId": 273,
        "type": "autoroute"
      },
      {
        "sequenceId": "catchup_seq",
        "messageId": 274,
        "type": "bot"
      },
      {
        "sequenceId": "taskCheck_seq",
        "messageId": 263,
        "type": "autoroute"
      },
      {
        "sequenceId": "taskCheck_seq",
        "messageId": 286,
        "type": "autoroute"
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 87,
        "type": "bot"
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 88,
        "type": "choice",
        "choiceSelected": {
          "index": 1,
          "text": "I... Did not...",
          "contentKey": "user.choose.task_status.failed"
        }
      },
      {
        "sequenceId": "overdue_seq",
        "messageId": 90,
        "type": "bot"
      }
    ]
  }
}